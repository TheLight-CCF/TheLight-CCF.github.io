{"name":"算法","slug":"算法","count":5,"postlist":[{"title":"扩展欧几里得","uid":"efce904e2fde083966eb57ba4b88b825","slug":"扩展欧几里得","date":"2021-09-16T12:43:04.000Z","updated":"2021-09-16T13:26:12.698Z","comments":true,"path":"api/articles/扩展欧几里得.json","keywords":null,"cover":null,"text":"扩展欧几里得算法概况我们之前讲的gcd算法叫做欧几里得算法，下面介绍拓展欧几里得算法(Extended Euclidean algorithm,EXGCD),从它的名字就可以看出来，它是欧几里得算法的拓展。扩欧算法求的是二元一次不定方程$ax + by = gcd(a,b)$的一...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"数学","slug":"数学","count":4,"path":"api/tags/数学.json"},{"name":"拓展欧几里得","slug":"拓展欧几里得","count":1,"path":"api/tags/拓展欧几里得.json"},{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}},{"title":"最短路径问题","uid":"665dc3c56673e4afdc879c20d4cbcde8","slug":"最短路径问题","date":"2021-09-16T12:44:06.000Z","updated":"2021-09-16T13:26:40.023Z","comments":true,"path":"api/articles/最短路径问题.json","keywords":null,"cover":null,"text":"最短路径问题最短路径问题是图论研究中的一个经典算法问题，旨在寻找图（由结点和路径组成的）中两结点之间的最短路径。 松弛操作在讲松弛操作之前，我们要先明确一个事实 那就是在计算两点间的最短路时，通常不仅仅会算出两点间的最短路，而会把许多点之间的最短路一同算出来 那…… 这是为什么呐...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"图论","slug":"图论","count":7,"path":"api/tags/图论.json"},{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"最短路","slug":"最短路","count":1,"path":"api/tags/最短路.json"},{"name":"Dijkstra","slug":"Dijkstra","count":1,"path":"api/tags/Dijkstra.json"},{"name":"SPFA","slug":"SPFA","count":1,"path":"api/tags/SPFA.json"},{"name":"Bellman-Ford","slug":"Bellman-Ford","count":1,"path":"api/tags/Bellman-Ford.json"},{"name":"三角不等式","slug":"三角不等式","count":1,"path":"api/tags/三角不等式.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}},{"title":"最近公共祖先","uid":"4c36a9d56d2b10957f85952e1a221749","slug":"最近公共祖先","date":"2021-09-16T12:46:49.000Z","updated":"2021-09-16T13:26:43.474Z","comments":true,"path":"api/articles/最近公共祖先.json","keywords":null,"cover":[],"text":"最近公共祖先概念:对于有根树T的两个结点u、v，最近公共祖先LCA(T,u,v)表示一个结点x，满足x是u和v的祖先,且x的深度尽可能大。(即找两个节点共同的父节点) 例:6和7的LCA是2，3和7的LCA是1 LCA的求法:1.暴力让他们一步步向上找//处理出now所有儿子节点...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"},{"name":"图论","slug":"图论","count":7,"path":"api/tags/图论.json"},{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"倍增","slug":"倍增","count":1,"path":"api/tags/倍增.json"},{"name":"LCA","slug":"LCA","count":1,"path":"api/tags/LCA.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}},{"title":"生成树问题","uid":"650830902f7d1f1c6412622da735e342","slug":"生成树问题","date":"2021-09-16T12:47:44.000Z","updated":"2021-09-16T13:26:21.654Z","comments":true,"path":"api/articles/生成树问题.json","keywords":null,"cover":[],"text":"定义:给定一张n个点m条边的图,我们要从m条边当中选出n-1条边,使得选出来的n-1条边能和n个点组成一棵树求最小生成树的解决方法思路: 我们可以在这张图中找到一条权值最小的边1 —&gt;1—&gt; 2 那么我们来思考,最小生成树中是否一定包含权值最小的那一条边 答案是,一定...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"},{"name":"图论","slug":"图论","count":7,"path":"api/tags/图论.json"},{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"最小生成树","slug":"最小生成树","count":1,"path":"api/tags/最小生成树.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}},"feature":true},{"title":"素数筛","uid":"bf5652b06f25669829372da351ef6ae7","slug":"素数筛","date":"2021-09-16T12:49:29.000Z","updated":"2021-09-16T13:26:25.453Z","comments":true,"path":"api/articles/素数筛.json","keywords":null,"cover":null,"text":"素数筛素数概念:学素数筛之前,我们要先引入素数的概念,那么,何为素数: 除了1和自身之外,没有其他约数的数称为素数(也叫质数) 有其他约数的数称为合数 特别的1既不是质数,也不是合数 判定:那么我们来思考,如何判断一个数是否是质数 自然我们可以枚举从小到大每个数看看能否被整除,复...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"},{"name":"数学","slug":"数学","count":4,"path":"api/tags/数学.json"},{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"素数","slug":"素数","count":1,"path":"api/tags/素数.json"},{"name":"筛法","slug":"筛法","count":1,"path":"api/tags/筛法.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}},"feature":true}]}