{"total":17,"pageSize":12,"pageCount":2,"data":[{"title":"图的强连通性质，桥，割点以及相关应用","uid":"43339b4e6d7b5864c06090c0390d8a24","slug":"图的强连通性质，桥，割点以及相关应用","date":"2021-09-16T09:40:45.000Z","updated":"2021-09-16T12:28:13.259Z","comments":true,"path":"api/articles/图的强连通性质，桥，割点以及相关应用.json","cover":[],"text":"目录 强连通 强连通的定义 强连通分量 Tarjan 强连通分量算法 强连通性的应用 边双连通 边双连通分量的定义 边双连通分量 Tarjan 边双连通分量算法 边双连通性的应用 点双连通 点双连通的定义 点双连通分量 Tarjan点双连通分量算法和圆方树 强连通 强连通的定义 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"},{"name":"图论","slug":"图论","count":7,"path":"api/tags/图论.json"},{"name":"强连通分量","slug":"强连通分量","count":1,"path":"api/tags/强连通分量.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}},{"title":"网络流选讲","uid":"005d78720b9e835a238af502516610c0","slug":"网络流选讲","date":"2021-09-16T09:40:18.000Z","updated":"2021-09-16T12:28:07.781Z","comments":true,"path":"api/articles/网络流选讲.json","cover":null,"text":"网络流选讲网络流定义 一个有向图，存在源点$S$和汇点$T$，每条边有一个流量，求从$S$到$T$最多能经过多少流量 $S \\in S’,T \\notin S’$​​,$E’ = (u,v) | u \\in S’,v \\notin S $​​​​ 最大流量 = 最小割 Ford-...","link":"","photos":[],"count_time":{"symbolsCount":865,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"},{"name":"图论","slug":"图论","count":7,"path":"api/tags/图论.json"},{"name":"网络流","slug":"网络流","count":1,"path":"api/tags/网络流.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}},{"title":"优化技巧","uid":"e2573f345f8e369bd93647303f895691","slug":"优化技巧","date":"2021-09-16T09:39:54.000Z","updated":"2021-09-16T12:28:25.303Z","comments":true,"path":"api/articles/优化技巧.json","cover":null,"text":"DP优化 $f_i = min_{i - l &lt; j &lt; i}(f_j + p_j) + p_i$​​ 使用单调队列优化 $f_i = sum_{i - l &lt; j &lt; i}(f_j + p_j) + p_i$ 使用前缀和优化 $f_i = min_{i ...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"DP","slug":"DP","count":2,"path":"api/tags/DP.json"},{"name":"动态规划","slug":"动态规划","count":2,"path":"api/tags/动态规划.json"},{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"},{"name":"DP优化","slug":"DP优化","count":1,"path":"api/tags/DP优化.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}},{"title":"DP","uid":"25ed3aa3446c2c64cf6228f9f4e4f9c4","slug":"DP","date":"2021-09-16T09:38:51.000Z","updated":"2021-09-16T12:28:18.110Z","comments":true,"path":"api/articles/DP.json","cover":null,"text":"DPpart1.动态规划的核心概念 状态 转移方程 初始化 实例揭秘本质—斐波那契数列 $众所周知 斐波那契数列的的递推式是:$ $f_i = f_{i-1} + f_{i-1}(i \\ge 2)$​ $问题来了，如何来求$$f_n$? $这个时候就要用到f_i = f_{i-1...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"DP","slug":"DP","count":2,"path":"api/tags/DP.json"},{"name":"动态规划","slug":"动态规划","count":2,"path":"api/tags/动态规划.json"},{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}},{"title":"生成函数的运算与组合数计数问题","uid":"942862e9c14bb68bd04eca0737914553","slug":"生成函数的运算与组合数计数问题","date":"2021-09-16T09:32:38.000Z","updated":"2021-09-17T00:21:21.149Z","comments":true,"path":"api/articles/生成函数的运算与组合数计数问题.json","cover":[],"text":"生成函数的运算与组合数计数问题摘要 ​ 本文介绍了处理形式幂级数的一些高效算法，并在生成函数的运算过程中加以应用，从而解决一系列组合计数问题。 目录$1$.引言 $2$.多项式与形式幂级数 ​ $2.1$ 多项式 ​ $2.2$ 多项式的基本运算 ​ $2.3$ 形式幂级数 $3...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"知识点","slug":"知识点","count":14,"path":"api/tags/知识点.json"},{"name":"数学","slug":"数学","count":4,"path":"api/tags/数学.json"},{"name":"生成函数","slug":"生成函数","count":1,"path":"api/tags/生成函数.json"}],"author":{"name":"TheLight","slug":"blog-author","avatar":"https://finallight.oss-cn-shanghai.aliyuncs.com/images/TheLight.jpg","link":"/","description":"There is TheLight's blog,Thanks for your exploring.","socials":{"github":"https://github.com/TheLight-CCF","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/thelight-59","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/78969213"}}}}}]}